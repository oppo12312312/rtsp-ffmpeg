/*
 * @Description: 
 * @Author: zhongshuai
 * @Date: 2019-08-21 18:10:43
 * @LastEditors: zhongshuai
 * @LastEditTime: 2019-08-22 18:12:04
 */
// Generated by CoffeeScript 2.4.1
(function() {
  var assert;

  assert = require('assert');

  

  describe('node-rstp-stream', function() {
    var VideoStream;
    VideoStream = require('../');
    return it('should not throw an error when instantiated', function(done) {
      var videoStream;
      videoStream = new VideoStream({
        name: 'wowza',
        streamUrl: 'rtsp://admin:admin@10.231.20.156/1',
        wsPort: 9991,
        width: 1920,
        height: 1080,
        path: "/156",
        ffmpegOptions: {
          '-r': '50',
          '-s': '1920x1080'
        }
      });
      new VideoStream({
        name: '78',
        streamUrl: 'rtsp://admin:admin@10.231.20.78',
        wsPort: 9992,
        width: 1920,
        height: 1080,
        path: "/78",
        ffmpegOptions: {
          '-r': '50',
          '-s': '1920x1080'
        }
      });
      // new VideoStream({
      //   name: 'wowza',
      //   streamUrl: 'rtsp://admin:admin@10.231.20.155/1',
      //   wsPort: 9999,
      //   width: 1920,
      //   height: 1080,
      //   path: "/155",
      //   ffmpegOptions: {
      //     '-r': '50',
      //     '-s': '1920x1080'
      //   }
      // });

      // new VideoStream({
      //   name: 'wowza',
      //   streamUrl: 'rtsp://admin:admin@10.231.20.77',
      //   wsPort: 9999,
      //   width: 1920,
      //   height: 1080,
      //   path: "/77",
      //   ffmpegOptions: {
      //     '-r': '50',
      //     '-s': '1920x1080'
      //   }
      // });
      

      videoStream.on('exitWithError', () => {
        videoStream.stop();
        assert.fail('videoStream exited with error');
        return done();
      });
      // Must use setTimeout because we need the stream instantiated before we can stop it
      // otherwise it blocks the test runner from exiting.
      // return setTimeout(() => {
      //   videoStream.stop();
      //   return done();
      // }, 1900);
    });
  });

}).call(this);
